- Name: Assembly
  Aliases: []
  Description: Execute a dotnet Assembly EntryPoint.
  Author:
      Name: Ryan Cobb
      Handle: cobbr_io
      Link: https://twitter.com/cobbr_io
  Help:
  Language: CSharp
  CompatibleDotNetVersions:
  - Net35
  - Net40
  Code: |
    using System;
    using System.IO;
    using System.Linq;
    using System.Collections.Generic;

    using SharpSploit.Execution;
    
    public static class Task
    {
        public static Stream OutputStream { get; set; }
        public static string Execute(string Assembly, string Parameters = "")
        {
            try
            {
                string[] args = SplitCommandLine(Parameters).ToArray();
                
                TextWriter realStdOut = Console.Out;
                TextWriter realStdErr = Console.Error;
                StreamWriter stdOutWriter = new StreamWriter(OutputStream);
                StreamWriter stdErrWriter = new StreamWriter(OutputStream);
                stdOutWriter.AutoFlush = true;
                stdErrWriter.AutoFlush = true;
                Console.SetOut(stdOutWriter);
                Console.SetError(stdErrWriter);
                
                SharpSploit.Execution.Assembly.AssemblyExecute(Assembly, new Object[] { args });
                
                Console.Out.Flush();
                Console.Error.Flush();
                Console.SetOut(realStdOut);
                Console.SetError(realStdErr);
                
                OutputStream.Close();
                return "";
            }
            catch (Exception e)
            {
              if (OutputStream != null)
              {
                OutputStream.Close();
              }
              return e.GetType().FullName + ": " + e.Message + Environment.NewLine + e.StackTrace + Environment.NewLine + e.InnerException.GetType().FullName + ": " + e.InnerException.Message + Environment.NewLine + e.InnerException.StackTrace;
            }
        }

        // Credit: https://stackoverflow.com/a/298990
        private static IEnumerable<string> SplitCommandLine(string commandLine)
        {
            bool inQuotes = false;

            return commandLine.Split(c =>
            {
                if (c == '\"' || c == '\'')
                    inQuotes = !inQuotes;

                return !inQuotes && c == ' ';
            })
                .Select(arg => arg.Trim().TrimMatchingQuotes('\"').TrimMatchingQuotes('\''))
                .Where(arg => !string.IsNullOrEmpty(arg));
        }

        private static IEnumerable<string> Split(this string str, Func<char, bool> controller)
        {
            int nextPiece = 0;

            for (int c = 0; c < str.Length; c++)
            {
                if (controller(str[c]))
                {
                    yield return str.Substring(nextPiece, c - nextPiece);
                    nextPiece = c + 1;
                }
            }

            yield return str.Substring(nextPiece);
        }

        private static string TrimMatchingQuotes(this string input, char quote)
        {
            if ((input.Length >= 2) && 
                (input[0] == quote) && (input[input.Length - 1] == quote))
                return input.Substring(1, input.Length - 2);

            return input;
        }
    }
  TaskingType: Assembly
  UnsafeCompile: false
  TokenTask: false
  Options: []
  ReferenceSourceLibraries:
  - Name: SharpSploit
    Description: SharpSploit is a library for C# post-exploitation modules.
    Location: SharpSploit\SharpSploit\
    Language: CSharp
    CompatibleDotNetVersions:
    ReferenceAssemblies:
    - Name: System.Management.Automation.dll
      Location: net35\System.Management.Automation.dll
      DotNetVersion: Net35
    - Name: System.Management.dll
      Location: net40\System.Management.dll
      DotNetVersion: Net40
    - Name: System.Management.Automation.dll
      Location: net40\System.Management.Automation.dll
      DotNetVersion: Net40
    - Name: System.IdentityModel.dll
      Location: net40\System.IdentityModel.dll
      DotNetVersion: Net40
    - Name: System.dll
      Location: net40\System.dll
      DotNetVersion: Net40
    - Name: System.DirectoryServices.dll
      Location: net40\System.DirectoryServices.dll
      DotNetVersion: Net40
    - Name: System.Core.dll
      Location: net40\System.Core.dll
      DotNetVersion: Net40
    - Name: mscorlib.dll
      Location: net40\mscorlib.dll
      DotNetVersion: Net40
    - Name: System.Management.dll
      Location: net35\System.Management.dll
      DotNetVersion: Net35
    - Name: mscorlib.dll
      Location: net35\mscorlib.dll
      DotNetVersion: Net35
    - Name: System.Core.dll
      Location: net35\System.Core.dll
      DotNetVersion: Net35
    - Name: System.DirectoryServices.dll
      Location: net35\System.DirectoryServices.dll
      DotNetVersion: Net35
    - Name: System.dll
      Location: net35\System.dll
      DotNetVersion: Net35
    - Name: System.IdentityModel.dll
      Location: net35\System.IdentityModel.dll
      DotNetVersion: Net35
    EmbeddedResources: []
  ReferenceAssemblies: []
  EmbeddedResources: []
  Empire:
    tactics: []
    software: ''
    techniques:
      - T1059
    background: true
    output_extension:
    needs_admin: false
    opsec_safe: false
    comments: ''
    options:
      - name: File
        description: Assembly file to execute.
        required: true
        type: file
      - name: Parameters
        description: The command-line parameters to pass to the assembly's EntryPoint.
        required: false
        value: ''
    advanced:
      custom_generate: true