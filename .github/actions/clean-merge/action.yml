name: 'Clean Merge'
description: 'Merge a branch into another branch without creating a merge commit. Fail if the merge would create merge conflicts.'
inputs:
  from-branch:
    description: 'The branch to merge from'
    required: true
  to-branch:
    description: 'The branch to merge to'
    required: true
  push-repo:
    description: 'The remote to push to'
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout ${{ inputs.to-branch }}
      shell: bash
      run: |
        git checkout ${{ inputs.to-branch }}

        # reset submodules https://gist.github.com/nicktoumpelis/11214362
        git clean -xfd
        git submodule foreach --recursive git clean -xfd
        git reset --hard
        git submodule foreach --recursive git reset --hard
        git submodule update --init --recursive
    - name: Merge ${{ inputs.from-branch }} branch to ${{ inputs.to-branch }}
      shell: '/bin/bash {0}'
      run: |
        git merge --no-edit ${{ inputs.from-branch }}
        if [ $? -ne 0 ]; then
          echo "Merge failed. Aborting. This is likely caused by a conflict and the merge must be done manually."
          exit 1
        fi

        git diff ${{ inputs.push-repo }}/${{ inputs.to-branch }} --exit-code --quiet
        if [ $? -eq 0 ]; then
          echo "No changes needed to merge."
          echo "MERGE_STATUS=NO_CHANGES" >> $GITHUB_ENV
        else
          echo "Changes needed to merge."
          echo "MERGE_STATUS=CHANGES" >> $GITHUB_ENV
        fi
        exit 0
    - name: Push ${{ inputs.to-branch }} to GitHub
      if: ${{ env.MERGE_STATUS == 'CHANGES' }}
      shell: bash
      run: |
        git push ${{ inputs.push-repo }} ${{ inputs.to-branch }}
        echo "MERGE_STATUS=NO_CHANGES" >> $GITHUB_ENV